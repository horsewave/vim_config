let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <silent> <BS> =AutoPairsDelete()
nmap <buffer> <silent> ;PN :set pastei=protodef#ReturnSkeletonsFromPrototypesForCurrentBuffer({'includeNS' : 0})='[:set nopaste
nmap <buffer> <silent> ;PP :set pastei=protodef#ReturnSkeletonsFromPrototypesForCurrentBuffer({})='[:set nopaste
inoremap <buffer> <silent> ¬ß =AutoPairsMoveCharacter('''')
inoremap <buffer> <silent> ¬¢ =AutoPairsMoveCharacter('"')
inoremap <buffer> <silent> ¬© =AutoPairsMoveCharacter(')')
inoremap <buffer> <silent> ¬® =AutoPairsMoveCharacter('(')
inoremap <buffer> <silent> √õ =AutoPairsMoveCharacter('[')
inoremap <buffer> <silent> √Æ :call AutoPairsJump()a
inoremap <buffer> <silent> <expr> √∞ AutoPairsToggle()
inoremap <buffer> <silent> √¢ =AutoPairsBackInsert()
inoremap <buffer> <silent> √• =AutoPairsFastWrap()
inoremap <buffer> <silent> √Ω =AutoPairsMoveCharacter('}')
inoremap <buffer> <silent> √ª =AutoPairsMoveCharacter('{')
inoremap <buffer> <silent> √ù =AutoPairsMoveCharacter(']')
inoremap <buffer> <silent> √õ =AutoPairsMoveCharacter('[')
map <buffer> <F5> :w:make
inoremap <buffer> <silent>  =AutoPairsDelete()
inoremap <buffer> <silent>   =AutoPairsSpace()
inoremap <buffer> <silent> " =AutoPairsInsert('"')
inoremap <buffer> <silent> ' =AutoPairsInsert('''')
inoremap <buffer> <silent> ( =AutoPairsInsert('(')
inoremap <buffer> <silent> ) =AutoPairsInsert(')')
xnoremap <buffer> <silent> √∞ :call AutoPairsToggle()
nnoremap <buffer> <silent> √∞ :call AutoPairsToggle()
xnoremap <buffer> <silent> √Æ :call AutoPairsJump()
nnoremap <buffer> <silent> √Æ :call AutoPairsJump()
onoremap <buffer> <silent> √Æ :call AutoPairsJump()
onoremap <buffer> <silent> √∞ :call AutoPairsToggle()
inoremap <buffer> <silent> [ =AutoPairsInsert('[')
inoremap <buffer> <silent> ] =AutoPairsInsert(']')
inoremap <buffer> <silent> ` =AutoPairsInsert('`')
inoremap <buffer> <silent> { =AutoPairsInsert('{')
inoremap <buffer> <silent> } =AutoPairsInsert('}')
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=inc
setlocal conceallevel=2
setlocal completefunc=youcompleteme#CompleteFunc
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal cursorcolumn
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'cpp'
setlocal filetype=cpp
endif
setlocal fixendofline
setlocal foldcolumn=5
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={,}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=2
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=jcroql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal nolist
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=ccomplete#Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal signcolumn=auto
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!Pl#Statusline(0,0)
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'cpp'
setlocal syntax=cpp
endif
setlocal tabstop=2
setlocal tagcase=
setlocal tags=
setlocal textwidth=79
setlocal thesaurus=
setlocal undofile
setlocal undolevels=-123456
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
1,45fold
58,89fold
90,95fold
96,123fold
128,132fold
142,170fold
136,172fold
180,194fold
198,203fold
206,209fold
176,213fold
218,292fold
297,365fold
370,383fold
409,411fold
419,422fold
426,429fold
433,436fold
389,440fold
445,449fold
496,512fold
528,533fold
546,555fold
559,564fold
569,572fold
576,580fold
582,586fold
588,592fold
595,599fold
602,605fold
608,611fold
451,617fold
621,627fold
630,634fold
661,665fold
667,671fold
674,678fold
638,680fold
708,712fold
715,719fold
721,725fold
686,727fold
752,756fold
759,763fold
765,769fold
731,771fold
798,802fold
805,809fold
811,815fold
776,817fold
839,843fold
845,849fold
821,851fold
877,881fold
883,887fold
856,889fold
891,896fold
915,921fold
924,927fold
930,933fold
898,937fold
942,946fold
991,1007fold
1023,1028fold
1042,1044fold
1048,1052fold
1054,1058fold
1060,1064fold
1067,1071fold
1074,1077fold
1080,1083fold
948,1089fold
1096,1103fold
1094,1104fold
1109,1111fold
1143,1148fold
1156,1159fold
1162,1165fold
1114,1172fold
1206,1215fold
1222,1225fold
1228,1231fold
1177,1238fold
1275,1282fold
1285,1296fold
1299,1308fold
1312,1315fold
1318,1321fold
1324,1327fold
1241,1334fold
1345,1347fold
1351,1353fold
1416,1419fold
1434,1448fold
1449,1451fold
1458,1481fold
1484,1489fold
1494,1497fold
1502,1514fold
1515,1525fold
1537,1559fold
1562,1582fold
1601,1608fold
1615,1619fold
1363,1629fold
1642,1645fold
1633,1650fold
1652,1655fold
1683,1687fold
1690,1694fold
1696,1700fold
1657,1702fold
1705,1708fold
1727,1731fold
1734,1738fold
1710,1740fold
1743,1749fold
1773,1793fold
1802,1806fold
1809,1813fold
1815,1817fold
1752,1824fold
1826,1832fold
1853,1904fold
1913,1917fold
1920,1922fold
1835,1929fold
1934,1938fold
1962,2014fold
2023,2027fold
2030,2034fold
2036,2038fold
1940,2045fold
2048,2050fold
2070,2092fold
2101,2105fold
2109,2111fold
2052,2118fold
2138,2142fold
2144,2146fold
2123,2149fold
2180,2184fold
2187,2191fold
2193,2195fold
2153,2201fold
2230,2259fold
2267,2271fold
2274,2278fold
2280,2282fold
2205,2288fold
2290,2293fold
2315,2340fold
2349,2353fold
2357,2359fold
2297,2366fold
2368,2371fold
2411,2415fold
2418,2420fold
2373,2423fold
2429,2454fold
2475,2483fold
2486,2489fold
2492,2495fold
2458,2500fold
2531,2534fold
2537,2540fold
2543,2546fold
2505,2552fold
2593,2595fold
2608,2610fold
2615,2618fold
2621,2624fold
2627,2630fold
2634,2637fold
2640,2643fold
2646,2649fold
2560,2652fold
58
normal! zo
136
normal! zo
142
normal! zo
176
normal! zo
176
normal! zc
389
normal! zo
389
normal! zc
451
normal! zo
451
normal! zc
638
normal! zo
638
normal! zc
686
normal! zo
686
normal! zc
731
normal! zo
731
normal! zc
776
normal! zo
776
normal! zc
821
normal! zo
821
normal! zc
856
normal! zo
856
normal! zc
898
normal! zo
898
normal! zc
948
normal! zo
948
normal! zc
1094
normal! zo
1094
normal! zc
1114
normal! zo
1114
normal! zc
1177
normal! zo
1177
normal! zc
1241
normal! zo
1241
normal! zc
1363
normal! zo
1363
normal! zc
1633
normal! zo
1633
normal! zc
1657
normal! zo
1657
normal! zc
1710
normal! zo
1710
normal! zc
1752
normal! zo
1752
normal! zc
1835
normal! zo
1835
normal! zc
1940
normal! zo
1940
normal! zc
2052
normal! zo
2052
normal! zc
2123
normal! zo
2153
normal! zo
2153
normal! zc
2205
normal! zo
2205
normal! zc
2297
normal! zo
2297
normal! zc
2373
normal! zo
2373
normal! zc
2458
normal! zo
2458
normal! zc
2505
normal! zo
2505
normal! zc
2560
normal! zo
2560
normal! zc
let s:l = 78 - ((77 * winheight(0) + 28) / 56)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
78
normal! 0
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
